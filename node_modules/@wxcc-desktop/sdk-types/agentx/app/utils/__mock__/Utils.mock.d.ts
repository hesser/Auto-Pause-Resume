import { Store } from "@/store";
import { UserStationLoginTypes } from "@agentx/agentx-mfe-wc-based";
export declare const mockPciData: {
    action: string;
    isAttachmentEnabled: boolean;
    isChatBannerEnabled: boolean;
};
export declare const mockPciAllowedAttachmentData: {
    data: string[];
};
export declare const mockEpDnMappingsList: {
    name: string;
    dialledNumber: string;
    id: string;
}[];
export declare const mockFeatureFlags: {
    isCareAttachmentEnabled: boolean;
    isPCIComplianceEnabled: boolean;
    isVideoEnabled: boolean;
    isCloudCherryEnabled: boolean;
    isDigitalFFEnabled: boolean;
    isDesktopReasonCodeEnabled: boolean;
    isImiChatWidgetEnabled: boolean;
    isSteeringDigitsAppendEnabled: boolean;
    isTahoeEnabled: boolean;
    isSecureCADVariablesEnabled: boolean;
    isDesktopNotesWidgetEnabled: boolean;
    isAdvancedHeaderEnabled: boolean;
    isLogRocketEnabled: boolean;
    isDesktopContactCleanup: boolean;
    isLogRocketMaskingDisabled: boolean;
    isInternationalDiallingEnabled: boolean;
    isIMIGlobalVariablesEnabled: boolean;
    isGlobalVariablesEnabled: boolean;
    isDesktopConsultToEntryPointDnEnabled: boolean;
    isDesktopMaxSessionLimitsEnabled: boolean;
    isSignoutBySupervisorEnabled: boolean;
    isCallbackRetryEnabled: boolean;
    isWebRTCEnabled: boolean;
    isWebRTCSupervisorEnabled: boolean;
    isProgressiveCampaignEnabled: boolean;
    isProgressiveCampaign1NEnabled: boolean;
    isDesktopMaerskEnhancementEnabled: boolean;
    isESDPostInteractionInsightsEnabled: boolean;
    isDesktopMaerskAcqueonTeamId: boolean;
    isNativeChat: boolean;
    isDesktopCpdViewEnabled: boolean;
    isAddressBookInfiniteScrollEnabled: boolean;
    isProjectionOutdialANIEnabled: boolean;
    isRecordingManagementEnabled: boolean;
    isDesktopMSStateSyncEnabled: boolean;
    isDesktopAuxCodesInfiniteScrollEnabled: boolean;
    isDesktopWebexStateSyncEnabled: boolean;
    isDesktopEmergencyNotificationEnabled: boolean;
    isWebrtcRingingEnabled: boolean;
    isWebrtcEndCallEnabled: boolean;
    isWxccMultiPartyConfEnabled: boolean;
    isAiAssistantEnabled: boolean;
    isQMWShowConsultRecordingsEnabled: boolean;
    isRecordingsRicherMetadataEnabled: boolean;
    isDesktopConferenceRecordingEnabled: boolean;
    isWxccPersistCallEnabled: boolean;
    isShowSignedOutAgentsEnabled: boolean;
    isAutoCsatEnabled: boolean;
    isWxccAgentInteractionEnabled: boolean;
    isMomentumV2Enabled: boolean;
    isWebexDirectoryViewEnabled: boolean;
    isWxccAllowOutdialCallAlwaysEnabled: boolean;
    isMaskSensitiveDataFFEnabled: boolean;
    isAllowConfTransferToEpDnEnabled: boolean;
    isOutdialOrgSearchEnabled: boolean;
    isConfirmDialogEnabled: boolean;
    isSuppressWebexCallingNotificationEnabled: boolean;
    isConsultTransferInfiniteScrollEnabled: boolean;
};
export declare const mockErrorDetails: UserStationLoginTypes.EError;
export declare const mockErrorEvent: Store.Session.ModuleErrorDialog.EErrorDetail;
export declare const userRecord: {
    organizationId: string;
    id: string;
    version: number;
    firstName: string;
    lastName: string;
    email: string;
    workPhone: string;
    mobile: string;
    ciUserId: string;
    broadCloudUserId: string;
    xspVersion: string;
    subscriptionId: string;
    userProfileId: string;
    contactCenterEnabled: boolean;
    siteId: string;
    teamIds: string[];
    agentProfileId: string;
    multimediaProfileId: string;
    deafultDialledNumber: string;
    externalIdentifier: string;
    active: boolean;
    dbId: string;
    imiUserCreated: boolean;
    preferredSupervisorTeamId: string;
    _links: {};
    createdTime: number;
    lastUpdatedTime: number;
};
export declare const agentUserProfile: {
    teamName: string;
    teamId: string;
    roles: string[];
    dnNumber: string;
    isExtension: boolean;
    usesOtherDN: boolean;
    extensionNumber: string;
    dialNumberValueForNonUS: string;
    isInternational: boolean;
    phoneNumber: string;
    countryCallingCode: string;
    countryCodeValue: string;
    isRememberMyCredentials: boolean;
    deviceType: string;
    isEmergencyModalAlreadyDisplayed: boolean;
};
export declare const userProfile: {
    organizationId: string;
    id: string;
    version: number;
    name: string;
    description: string;
    profileType: string;
    accessAllModules: string;
    accessAllEntryPoints: string;
    accessAllSites: string;
    accessAllQueues: string;
    accessAllTeams: string;
    userProfileAppModules: never[];
    entryPoints: never[];
    sites: string[];
    queues: never[];
    teams: never[];
    editableFolderIds: never[];
    viewableFolderIds: never[];
    nonViewableFolderIds: never[];
    active: boolean;
    createdTime: number;
    lastUpdatedTime: number;
};
export declare const managedTeams: {
    id: string;
    version: number;
    dbId: string;
    name: string;
    siteId: string;
    links: never[];
}[];
export declare const managedQueues: {
    id: string;
    version: number;
    name: string;
    callDistributionGroups: never[];
    links: never[];
}[];
export declare const connectedCallbackErrorMessages: {
    reasonCode: number;
    message: string;
}[];
